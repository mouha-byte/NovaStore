import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_core/firebase_core.dart';
import '../firebase_options.dart';
import '../services/auth_service.dart';

class FirebaseSeeder {
  final FirebaseFirestore _db = FirebaseFirestore.instance;

  // M√©thode principale pour seed toutes les donn√©es
  Future<void> seedAll() async {
    print('üå± D√©marrage du seeding...');
    
    try {
      await seedProducts();
      await seedUsers();
      print('‚úÖ Seeding termin√© avec succ√®s!');
    } catch (e) {
      print('‚ùå Erreur lors du seeding: $e');
    }
  }

  // Seed des produits
  Future<void> seedProducts() async {
    print('üì¶ Ajout des produits...');

    final products = [
      {
        'title': 'Smart LED Watch 2025',
        'subtitle': 'Get the #1 trending smartwatch in 2025',
        'description': '''Experience the future with our revolutionary smart LED watch. Features include:

‚úì HD Display with vibrant colors
‚úì 7-day battery life
‚úì Water resistant (IP68)
‚úì Heart rate monitor
‚úì Sleep tracking
‚úì Multiple sport modes
‚úì Bluetooth connectivity

Perfect for fitness enthusiasts and tech lovers!''',
        'images': [
          'https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=800',
          'https://images.unsplash.com/photo-1546868871-7041f2a55e12?w=800',
        ],
        'videos': [],
        'price': 24.99,
        'compareAtPrice': 39.99,
        'discountPercentage': 40,
        'variants': [
          {
            'variantId': 'black',
            'title': 'Black',
            'SKU': 'LED-WATCH-BLK',
            'stock': 120,
            'price': 24.99,
          },
          {
            'variantId': 'silver',
            'title': 'Silver',
            'SKU': 'LED-WATCH-SLV',
            'stock': 80,
            'price': 27.99,
          },
          {
            'variantId': 'rose-gold',
            'title': 'Rose Gold',
            'SKU': 'LED-WATCH-RG',
            'stock': 60,
            'price': 29.99,
          },
        ],
        'soldCount': 1247,
        'shippingETA': '5-10 business days',
        'returnPolicy': '30 days money-back guarantee',
        'createdAt': Timestamp.now(),
        'updatedAt': Timestamp.now(),
      },
      {
        'title': 'Wireless Earbuds Pro',
        'subtitle': 'Premium sound quality meets comfort',
        'description': '''Immerse yourself in crystal-clear audio with our latest wireless earbuds.

‚úì Active noise cancellation
‚úì 30-hour total battery life
‚úì IPX7 water resistance
‚úì Touch controls
‚úì Premium audio quality
‚úì Ergonomic design
‚úì Fast charging (15 min = 3 hours)

Your perfect companion for music, calls, and workouts!''',
        'images': [
          'https://images.unsplash.com/photo-1590658268037-6bf12165a8df?w=800',
          'https://images.unsplash.com/photo-1606841837239-c5a1a4a07af7?w=800',
        ],
        'videos': [],
        'price': 34.99,
        'compareAtPrice': 59.99,
        'discountPercentage': 42,
        'variants': [
          {
            'variantId': 'white',
            'title': 'White',
            'SKU': 'EARBUDS-WHT',
            'stock': 150,
            'price': 34.99,
          },
          {
            'variantId': 'black',
            'title': 'Black',
            'SKU': 'EARBUDS-BLK',
            'stock': 100,
            'price': 34.99,
          },
        ],
        'soldCount': 892,
        'shippingETA': '7-12 business days',
        'returnPolicy': '30 days money-back guarantee',
        'createdAt': Timestamp.now(),
        'updatedAt': Timestamp.now(),
      },
      {
        'title': 'Portable Power Bank 20000mAh',
        'subtitle': 'Never run out of battery again',
        'description': '''High-capacity power bank with fast charging technology.

‚úì 20000mAh capacity
‚úì Charges iPhone 12 times
‚úì Dual USB ports
‚úì LED battery indicator
‚úì Fast charging support
‚úì Lightweight design
‚úì Safety protection

Keep all your devices powered throughout the day!''',
        'images': [
          'https://images.unsplash.com/photo-1609091839311-d5365f9ff1c5?w=800',
        ],
        'videos': [],
        'price': 19.99,
        'compareAtPrice': 34.99,
        'discountPercentage': 43,
        'variants': [],
        'soldCount': 543,
        'shippingETA': '5-10 business days',
        'returnPolicy': '30 days money-back guarantee',
        'createdAt': Timestamp.now(),
        'updatedAt': Timestamp.now(),
      },
    ];

    for (var product in products) {
      await _db.collection('products').add(product);
      print('  ‚úì Produit ajout√©: ${product['title']}');
    }
  }

  // Seed des utilisateurs de test
  Future<void> seedUsers() async {
    print('üë§ Ajout des utilisateurs...');

    final authService = AuthService();

    // Utilisateur admin
    try {
      final adminUser = await authService.register(
        'admin@store.com',
        'admin123',
        name: 'Admin User',
      );

      if (adminUser != null) {
        // Ajouter le flag isAdmin
        await _db.collection('users').doc(adminUser.id).update({
          'isAdmin': true,
          'walletBalance': 500.0, // Admin avec du solde pour tester
        });
        print('  ‚úì Admin cr√©√©: admin@store.com / admin123');
      }
    } catch (e) {
      print('  ‚ÑπÔ∏è Admin existe d√©j√† ou erreur: $e');
    }

    // Utilisateur test normal
    try {
      final testUser = await authService.register(
        'test@example.com',
        'password123',
        name: 'Test User',
      );

      if (testUser != null) {
        // Ajouter un solde initial
        await _db.collection('users').doc(testUser.id).update({
          'walletBalance': 100.0,
          'addresses': [
            {
              'address': '123 Test Street',
              'city': 'Paris',
              'state': '√éle-de-France',
              'zip': '75001',
              'country': 'France',
              'default': true,
            }
          ],
        });
        print('  ‚úì User test cr√©√©: test@example.com / password123');
      }
    } catch (e) {
      print('  ‚ÑπÔ∏è User test existe d√©j√† ou erreur: $e');
    }

    // Utilisateur avec commande
    try {
      final customerUser = await authService.register(
        'customer@example.com',
        'customer123',
        name: 'Customer User',
      );

      if (customerUser != null) {
        await _db.collection('users').doc(customerUser.id).update({
          'walletBalance': 250.0,
        });
        print('  ‚úì Customer cr√©√©: customer@example.com / customer123');
      }
    } catch (e) {
      print('  ‚ÑπÔ∏è Customer existe d√©j√† ou erreur: $e');
    }
  }

  // M√©thode pour nettoyer toutes les donn√©es (ATTENTION!)
  Future<void> clearAll() async {
    print('üóëÔ∏è  Nettoyage des donn√©es...');
    
    // Supprimer tous les produits
    final products = await _db.collection('products').get();
    for (var doc in products.docs) {
      await doc.reference.delete();
    }
    print('  ‚úì Produits supprim√©s');

    // Supprimer toutes les commandes
    final orders = await _db.collection('orders').get();
    for (var doc in orders.docs) {
      await doc.reference.delete();
    }
    print('  ‚úì Commandes supprim√©es');

    // Supprimer tous les d√©p√¥ts
    final deposits = await _db.collection('deposits').get();
    for (var doc in deposits.docs) {
      await doc.reference.delete();
    }
    print('  ‚úì D√©p√¥ts supprim√©s');

    print('‚úÖ Nettoyage termin√©!');
  }
}

// Fonction principale pour ex√©cuter le seeding
Future<void> main() async {
  print('üöÄ Initialisation Firebase...');
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  final seeder = FirebaseSeeder();
  
  // D√©commenter pour nettoyer avant de seed
  // await seeder.clearAll();
  
  await seeder.seedAll();

  print('\nüìä Donn√©es ajout√©es:');
  print('  - 3 produits');
  print('  - 3 utilisateurs:');
  print('    ‚Ä¢ admin@store.com / admin123 (Admin avec 500\$)');
  print('    ‚Ä¢ test@example.com / password123 (User avec 100\$)');
  print('    ‚Ä¢ customer@example.com / customer123 (Customer avec 250\$)');
  print('\n‚ú® Vous pouvez maintenant lancer l\'application!');
  print('   flutter run');
}
